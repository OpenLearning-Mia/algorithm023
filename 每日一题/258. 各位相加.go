





















// 审题、解决思路分析

非负整数 num   // 元素值>=0

反复将各个位上的数字相加，直到结果为一位数
输入: 38
输出: 2 
解释: 各位相加的过程为：3 + 8 = 11, 1 + 1 = 2。由于2是一位数，所以返回 2。
























public int addDigits(int num) {
    if (num < 10) {
        return num;
	}
	
    int next = 0;
	
	while (num != 0) {

		next = next + num % 10;
		
        num /= 10;
	
	}
    return addDigits(next);
}







x*100+y*10+z = x*99+y*9+x+y+z



class Solution {
    public int addDigits(int num) {
        return (num - 1) % 9 + 1;
    }
}

我再给简单补充一下，

数字：xyz=100*x+10*y+z=99*x+x+9*y+z=(99*x+9*y)+(x+y+z)，

xyz = (99*x+9*y)+(x+y+z)

也就是说xyz和（x+y+z）对于9来说是同模的,

即 xyz%9=（x+y+z）%9，这里假设（x+y+z）=ab，
// 题目需求就是：求x+y+z ？

同理（ab%9=(a+b)%9），可以一直递归下去直到一位数字，

也就是说我们可以得到模9的结果，

但是我们需要的是模10的结果，num%10=((num-1)%9+1)%10=(num-1)%9+1,

这里需要注意的是，1<=num<=9，然后写代码即可



例如某数xyzk,可以分解为xyzk = 1000*x + 100*y + 10*z + k = 999*x + 99*y + 9 *z + (x + y + z + k)，括号内即为所求(或下一次迭代)。

这里没看懂的人大概是不理解9这个数字怎么来的，为什么不是8，不是7。

本质上因为xyzk这个数是十进制的，所以每一项的系数都是10^m，而10^m - 1一定是9的倍数。

说白了，如果此例的xyzk是一个九进制数，那么按答主的解法这个特殊的系数就应该是8了，因为9^m - 1一定是8的倍数。



38 = 3 * 10^1 + 8 * 10^0
    = 3 * (9+1)^1 + 8 * (9+1)^0
    = 3* 9^1 + (3 * 9^0 + 8 * 9^0)
    = 3 * 9^1 + (3 +8) * 9^0
    = 4 * 9^1 + 2 * 9^0















2.进阶:
你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？





/* 
* 思路分析(time优化成O(1)的方案，数学推导)：
* 1.题目要求最终结果result为[个位数]，即result < 10(感受体会：审清题，紧抓住题目的需求是什么？));
* 2.num = xyz；
* 3.因为xyz = x*99+y*9+(z+x+y)，则xyz%9 = (x+y+z)%9 (重要推导，实现O(1)的关键点) 
* 4.题目要计算的是：(z+x+y)的结果result是否小于10， 
    4.1.如果(z+x+y) > 9，此时再分解：xyz = x*99+y*9+9+(z+x+y)%9，所以result = (x+y+z)%9 = xyz%9；
*   4.2.如果(z+x+y) == 9，则result = 9；
*   4.3.如果(z+x+y) < 9(满足了题目要求result < 10)，即result = (x+y+z)%9 = xyz%9;
*
* 复杂度分析:
*   时间：O(1)
*   空间：O(1)
*
*/
class Solution {
    public int addDigits(int num) {
		// 1.num < 10，这里倒是也可以改成 num == 0，return 0；但是会把num < 10的其他值挪到了下面第三步计算(是取余计算，cpu效率低，能不用取余%就不用)，
		if (num < 10) {  //这个直接用如下第三步的num % 9 对吧？？？那得在第二部加上num!=0的情况，不然num等于0时出错
			return num;
		}

		//2.(x+y+z)%9 == 0，表示x+y+z=9
		if (num % 9 == 0) {	
			return 9;
		} else {
			//3.(x+y+z)%9 != 0, 表示x+y+z < 10(是想要的结果)
			return num % 9;
		}	
    }
}
